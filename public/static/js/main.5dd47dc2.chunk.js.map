{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["fromOptions","toOptions","App","useState","from","setFrom","to","setTo","downloadingAxios","setDownloadingAxios","downloadedSizeAxios","setDownloadedSizeAxios","downloadingFetch","setDownloadingFetch","downloadAxios","a","axios","get","headers","apikey","responseType","params","onDownloadProgress","progressEvent","console","log","loaded","response","statusText","fileDownload","data","downloadFetch","fetch","blob","b","className","value","onChange","e","Number","target","map","n","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAKMA,G,MAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAC9CC,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAiE5CC,MA/Df,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEOF,mBAAS,IAFhB,mBAENG,EAFM,KAEFC,EAFE,OAGmCJ,oBAAS,GAH5C,mBAGNK,EAHM,KAGYC,EAHZ,OAIyCN,mBAAS,GAJlD,mBAINO,EAJM,KAIeC,EAJf,OAKmCR,oBAAS,GAL5C,mBAKNS,EALM,KAKYC,EALZ,OAMyCV,mBAAS,GANlD,mBAQPW,GARO,UAQM,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,iCAAkC,CAC/DC,QAAS,CACLC,OAAQ,QAEZC,aAAc,SACdC,OAAQ,CAACjB,KAAMA,EAAME,GAAIA,GACzBgB,mBAAoB,SAAAC,GAChBC,QAAQC,IAAIF,GACZZ,EAAuBY,EAAcG,QACrCjB,GAAoB,MAVV,OACZkB,EADY,OAalBH,QAAQC,IAAIE,EAASC,YACrBnB,GAAoB,GACpBoB,IAAaF,EAASG,KAAV,iBAA0B1B,EAA1B,YAAkCE,EAAlC,SAfM,2CAAH,sDAkBbyB,EAAa,uCAAG,8BAAAhB,EAAA,sEACKiB,MAAM,uCAAD,OAAwC5B,EAAxC,eAAmDE,GAAM,CACjFY,QAAS,CACLC,OAAQ,UAHE,cACZQ,EADY,OAMlBd,GAAoB,GACpBW,QAAQC,IAAIE,EAASC,YAPH,SAQFD,EAASM,OARP,OAQZC,EARY,OASlBrB,GAAoB,GACpBgB,IAAaK,EAAD,iBAAc9B,EAAd,YAAsBE,EAAtB,SAVM,4CAAH,qDAanB,OACE,qBAAK6B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACI,yCACA,wBAAQC,MAAOhC,EAAMiC,SAAU,SAACC,GAAQjC,EAAQkC,OAAOD,EAAEE,OAAOJ,SAAhE,SACKpC,EAAYyC,KAAI,SAACC,GAAD,OAAO,wBAAgBN,MAAOM,EAAvB,SAA2BA,GAAdA,QAEzC,uCACA,wBAAQN,MAAO9B,EAAI+B,SAAU,SAACC,GAAQ/B,EAAMgC,OAAOD,EAAEE,OAAOJ,SAA5D,SACKnC,EAAUwC,KAAI,SAACC,GAAD,OAAO,wBAAgBN,MAAOM,EAAvB,SAA2BA,GAAdA,QAEvC,gCACI,wBAAQC,QAAS7B,EAAe8B,SAAUpC,EAA1C,kCACA,8BAAIE,EAAJ,0BAEJ,8BACI,wBAAQiC,QAASZ,EAAea,SAAUhC,EAA1C,0CCjDCiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5dd47dc2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport fileDownload from 'js-file-download'\nimport './App.css';\n\nconst fromOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\nconst toOptions = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n\nfunction App() {\n  const [from, setFrom] = useState(10);\n  const [to, setTo] = useState(12);\n  const [downloadingAxios, setDownloadingAxios] = useState(false)\n  const [downloadedSizeAxios, setDownloadedSizeAxios] = useState(0)\n  const [downloadingFetch, setDownloadingFetch] = useState(false)\n  const [downloadedSizeFetch, setDownloadedSizeFetch] = useState(0)\n\n  const downloadAxios = async () => {\n      const response = await axios.get('http://localhost:9000/download', {\n          headers: {\n              apikey: \"abcd\",\n          },\n          responseType: 'stream',\n          params: {from: from, to: to},\n          onDownloadProgress: progressEvent => {\n              console.log(progressEvent)\n              setDownloadedSizeAxios(progressEvent.loaded)\n              setDownloadingAxios(true)\n          }\n      })\n      console.log(response.statusText)\n      setDownloadingAxios(false)\n      fileDownload(response.data, `random_${from}_${to}.csv`)\n  }\n\n  const downloadFetch = async () => {\n      const response = await fetch(`http://localhost:9000/download?from=${from}&to=${to}`, {\n          headers: {\n              apikey: \"abcd\",\n          },\n      })\n      setDownloadingFetch(true)\n      console.log(response.statusText)\n      const b = await response.blob()\n      setDownloadingFetch(false)\n      fileDownload(b, `random_${from}_${to}.csv`)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <label>From</label>\n          <select value={from} onChange={(e) => { setFrom(Number(e.target.value)) }}>\n              {fromOptions.map((n) => <option key={n} value={n}>{n}</option>)}\n          </select>\n          <label>To</label>\n          <select value={to} onChange={(e) => { setTo(Number(e.target.value)) }}>\n              {toOptions.map((n) => <option key={n} value={n}>{n}</option>)}\n          </select>\n          <div>\n              <button onClick={downloadAxios} disabled={downloadingAxios}>Download using Axios</button>\n              <p>{downloadedSizeAxios} bytes downloaded</p>\n          </div>\n          <div>\n              <button onClick={downloadFetch} disabled={downloadingFetch}>Download using Fetch</button>\n              {/*<p>{downloadedSizeFetch} bytes downloaded</p>*/}\n          </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}